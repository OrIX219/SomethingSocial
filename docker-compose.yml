version: '3.8'
name: 'somethingsocial'
services:
  auth-http:
    container_name: auth-http
    build:
      context: docker
    volumes:
      - ./internal:/internal
      - ~/go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /internal/auth
    ports:
      - "3001:$PORT"
    env_file:
      - .env
    environment:
      GOCACHE: /go-cache
    depends_on:
      auth-postgres:
        condition: service_healthy

  users-http:
    container_name: users-http
    build:
      context: docker
    volumes:
      - ./internal:/internal
      - ~/go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /internal/users
    ports:
      - "3002:$PORT"
    env_file:
      - .env
    environment:
      SERVER_TYPE: http
      GOCACHE: /go-cache
    depends_on:
      users-postgres:
        condition: service_healthy

  users-grpc:
    container_name: users-grpc
    build:
      context: docker
    volumes:
      - ./internal:/internal
      - ~/go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /internal/users
    ports:
      - "3020:$PORT"
    env_file:
      - .env
    environment:
      SERVER_TYPE: grpc
      GOCACHE: /go-cache
    depends_on:
      users-postgres:
        condition: service_healthy

  posts-http:
    container_name: posts-http
    build:
      context: docker
    volumes:
      - ./internal:/internal
      - ~/go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /internal/posts
    ports:
      - "3003:$PORT"
    env_file:
      - .env
    environment:
      SERVER_TYPE: http
      GOCACHE: /go-cache
    depends_on:
      users-postgres:
        condition: service_healthy

  posts-grpc:
    container_name: posts-grpc
    build:
      context: docker
    volumes:
      - ./internal:/internal
      - ~/go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /internal/posts
    ports:
      - "3030:$PORT"
    env_file:
      - .env
    environment:
      SERVER_TYPE: grpc
      GOCACHE: /go-cache
    depends_on:
      users-postgres:
        condition: service_healthy

  auth-postgres:
    container_name: auth-postgres
    image: postgres
    env_file:
      - .env
    ports:
      - "3100:$POSTGRES_PORT"
    volumes:
      - ./.db/postgres/data/auth:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 2s
      timeout: 5s
      retries: 10

  users-postgres:
    container_name: users-postgres
    image: postgres
    env_file:
      - .env
    ports:
      - "3200:$POSTGRES_PORT"
    volumes:
      - ./.db/postgres/data/users:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 2s
      timeout: 5s
      retries: 10

  posts-postgres:
    container_name: posts-postgres
    image: postgres
    env_file:
      - .env
    ports:
      - "3300:$POSTGRES_PORT"
    volumes:
      - ./.db/postgres/data/posts:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 2s
      timeout: 5s
      retries: 10
